# These environment variables must be set in CircleCI UI
#
# DOCKERHUB_REPO - docker hub repo, format: <username>/<repo>
# DOCKER_USER
# DOCKER_PASS
#
version: 2
jobs:
  lint-vet-fmt:
    docker:
      - image: golang:1.11
    working_directory: /usr/local/go/src/go.mozilla.org/autograph
    steps:
      - checkout
      - run:
          name: run golint
          command: make install-golint lint || true
      - run:
          name: run gofmt
          command: |
              make -s fmt-diff | tee fmt.diff
              test -z "$(cat fmt.diff)"
      - run:
          name: install packages for crypto11 headers for go vet
          command: |
              apt-get update
              apt-get install -y libltdl-dev
      - run:
          name: run got vet
          command: make vet

  test:
    docker:
      - image: golang:latest
    working_directory: /root/go/src/go.mozilla.org/autograph
    environment:
        GOPATH: "/root/go"
    steps:
      - run:
          name: Install packages
          command: |
              apt-get update
              apt-get install -y git ssh softhsm2 libltdl-dev netcat
      - run:
          name: Setup SoftHSM
          command: |
              mkdir /var/lib/softhsm/tokens
              softhsm2-util --init-token --slot 0 --label test --pin 0000 --so-pin 0000
      - checkout
      - run:
          name: Generate keys in softhsm
          command: |
              go run tools/softhsm/genkeys.go
      - run:
          name: Run Autograph with SoftHSM configuration
          command: |
              make install
              $GOPATH/bin/autograph -c autograph.softhsm.yaml
          background: true
      - run:
          name: Test HSM signers
          command: |
              cd tools/autograph-monitor
              go build -o autograph-monitor *.go
              while ! nc -z localhost 8000; do
                echo -n "."
                sleep 1 # wait for a sec before checking again
              done
              ./autograph-monitor
      - run:
          name: Build autograph-client
          command: |
              go build -o $GOPATH/bin/autograph-client $GOPATH/src/go.mozilla.org/autograph/tools/autograph-client/client.go
      - run:
          name: Prepare cache
          command: |
              mkdir /tmp/cache
              cp /root/go/bin/autograph /tmp/cache/
              cp /root/go/bin/autograph-client /tmp/cache/
              cp /root/go/src/go.mozilla.org/autograph/autograph.yaml /tmp/cache/
              cp /root/go/src/go.mozilla.org/autograph/autograph.testsignapk.yaml /tmp/cache/
              chmod -R 777 /tmp/cache
      - save_cache:
          key: autograph-{{ .Branch }}-{{epoch}}
          paths:
            - /tmp/cache

  testsignapk:
    working_directory: ~/
    docker:
      - image: circleci/android:api-25-node8-alpha
    steps:
      - restore_cache:
          key: autograph-{{ .Branch }}
      - run:
          name: Run Autograph
          command: |
              /tmp/cache/autograph -c /tmp/cache/autograph.testsignapk.yaml
          background: true
      - run:
          name: Sign Fennec Nightly APK
          command: |
              sleep 5
              wget https://archive.mozilla.org/pub/mobile/nightly/2018/10/2018-10-01-10-01-42-mozilla-central-android-api-16/fennec-64.0a1.multi.android-arm.apk
              /tmp/cache/autograph-client -f fennec-64.0a1.multi.android-arm.apk -o fennec-64.0a1.multi.android-arm.resigned.apk -k apk_cert_with_dsa_sha1 -pk7digest sha1 -u alice -p fs5wgcer9qj819kfptdlp8gm227ewxnzvsuj9ztycsx08hfhzu
      - run:
          name: Verify Fennec Nightly APK
          command: |
              sudo apt update
              sudo apt install -y android-sdk-build-tools
              /opt/android/sdk/build-tools/27.0.3/apksigner verify --verbose fennec-64.0a1.multi.android-arm.resigned.apk
      - run:
          name: Sign and Verify Fennec Beta APK
          command: |
              wget https://archive.mozilla.org/pub/mobile/releases/64.0b9/android-api-16/en-US/fennec-64.0b9.en-US.android-arm.apk
              /tmp/cache/autograph-client -f fennec-64.0b9.en-US.android-arm.apk -o fennec-64.0b9.en-US.android-arm.resigned.apk -k legacy_apk_with_rsa -pk7digest sha1 -u alice -p fs5wgcer9qj819kfptdlp8gm227ewxnzvsuj9ztycsx08hfhzu
              /opt/android/sdk/build-tools/27.0.3/apksigner verify --verbose fennec-64.0b9.en-US.android-arm.resigned.apk
      - run:
          name: Sign and Verify with ECDSA
          command: |
              wget https://raw.githubusercontent.com/mozilla-services/autograph/master/signer/apk/aligned-two-files.apk
              /tmp/cache/autograph-client -f aligned-two-files.apk -o aligned-two-files.resigned.apk -k apk_cert_with_ecdsa_sha256 -u alice -p fs5wgcer9qj819kfptdlp8gm227ewxnzvsuj9ztycsx08hfhzu
              /opt/android/sdk/build-tools/27.0.3/apksigner verify --verbose fennec-64.0b9.en-US.android-arm.resigned.apk
      - run:
          name: Sign and Verify Fennec with RSA
          command: |
              /tmp/cache/autograph-client -f aligned-two-files.apk -o aligned-two-files.rsa.apk -k testapp-android -u alice -p fs5wgcer9qj819kfptdlp8gm227ewxnzvsuj9ztycsx08hfhzu
              /opt/android/sdk/build-tools/27.0.3/apksigner verify --verbose aligned-two-files.rsa.apk

  build:
    # based on the official golang image with more docker stuff
    docker:
      - image: circleci/golang:1.11.4
    working_directory: /go/src/go.mozilla.org/autograph
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: create version.json and other autogenerated files
          command: make generate
      - run:
          name: Build Docker image
          command: docker build -t app:build .

      # save the built docker container to CircleCI's cache since
      # CircleCI Workflows do not have the same remote docker
      # instance.
      #
      # Use /go/src/app since we don't have permissions to make
      # directories in other locations
      - run:
          name: docker save app:build
          command: |
              mkdir -p /go/src/app/cache
              docker save -o /go/src/app/cache/docker.tar "app:build"
      - save_cache:
          key: v2-{{ .Branch }}-{{epoch}}
          paths:
            - /go/src/app/cache/docker.tar

  deploy:
    docker:
      - image: docker:18.02.0-ce
    steps:
      - setup_remote_docker
      - restore_cache:
          key: v2-{{.Branch}}
      - run:
          name: Restore Docker image cache
          command: docker load -i /go/src/app/cache/docker.tar

      - run:
          name: Deploy to Dockerhub
          command: |
            # deploy master
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              docker login -u $DOCKER_USER -p $DOCKER_PASS
              docker tag app:build ${DOCKERHUB_REPO}:latest
              docker push ${DOCKERHUB_REPO}:latest
            elif  [ ! -z "${CIRCLE_TAG}" ]; then
            # deploy a release tag...
              docker login -u $DOCKER_USER -p $DOCKER_PASS
              echo "${DOCKERHUB_REPO}:${CIRCLE_TAG}"
              docker tag app:build "${DOCKERHUB_REPO}:${CIRCLE_TAG}"
              docker images
              docker push "${DOCKERHUB_REPO}:${CIRCLE_TAG}"
            fi

workflows:
  version: 2
  test-sign-build-deploy:
    jobs:
      - lint-vet-fmt

      - test

      - testsignapk:
          requires:
            - test

      - build

      - deploy:
          requires:
            - build
            - testsignapk
          filters:
            tags:
              # only upload the docker container on semver tags
              only: /[0-9]\.[0-9]\.[0-9]/
            branches:
              only: master
